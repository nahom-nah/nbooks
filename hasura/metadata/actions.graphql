type Mutation {
  activate_deactivate(
    objects: ActivateDeactivateInput
  ): ActivateDeactivateResponse
}

type Mutation {
  add_item_load(
    objects: AddItemLoadInput
  ): AddItemLoadResponse
}

type Mutation {
  agent_to_distributor(
    objects: AgentToDistributorInput!
  ): AgentToDistributorOutput
}

type Mutation {
  approve_deposit(
    objects: ApproveDepositInput
  ): ApproveDepositResponse
}

type Mutation {
  approve_order(
    objects: ApproveOrderInput
  ): ApproveOrderResponse
}

type Mutation {
  change_denomination(
    objects: ChangeDenominationInput!
  ): ChangeDenominationOutput
}

type Mutation {
  clear_deposit(
    objects: ClearDepositInput
  ): ClearDepositResponse
}

type Mutation {
  create_ccd_and_user(
    objects: CreateCCDAndUserInput
  ): CreateCCDAndUserResponse
}

type Mutation {
  create_dist_and_user(
    objects: CreateDistAndUserInput
  ): CreateDistAndUserResponse
}

type Mutation {
  create_outlet_and_user(
    objects: CreateOutletAndUserInput
  ): CreateOutletAndUserResponse
}

type Mutation {
  create_user(
    objects: CreateInput
  ): CreateResponse
}

type Mutation {
  declare_sold(
    objects: DeclareSoldInput
  ): DeclareSoldResponse
}

type Mutation {
  declare_sold_outlet(
    objects: DeclareSoldOutletInput
  ): DeclareSoldOutletResponse
}

type Mutation {
  dtopup_approve(
    objects: DtopupApproveInput
  ): DtopupApproveResponse
}

type Mutation {
  dtopup_takeback(
    objects: DtopupTakebackInput
  ): DtopupTakebackResponse
}

type Mutation {
  get_voucher_with_index(
    objects: GetVoucherInput!
  ): [GetVoucherOutput]
}

type Mutation {
  item_transfer_to_distributor(
    objects: ItemTransferToDistributorInput
  ): ItemTransferToDistributorResponse
}

type Mutation {
  item_transfer_to_outlet(
    objects: ItemTransferToOutletInput
  ): ItemTransferToOutletResponse
}

type Mutation {
  item_transfer_to_user(
    objects: ItemTransferToUserInput
  ): ItemTransferToUserResponse
}

type Mutation {
  load_approve(
    objects: LoadApproveInput
  ): LoadApproveResponse
}

type Mutation {
  load_takeback(
    objects: LoadTakebackInput
  ): LoadTakebackResponse
}

type Mutation {
  login(
    objects: LoginInput
  ): LoginResponse
}

type Mutation {
  old_get_voucher_with_index(
    objects: OldGetVoucherInput!
  ): [OldGetVoucherOutput]
}

type Mutation {
  old_reprint_batch_range_voucher_with_index(
    objects: OldReprintBatchRangeWithIndexInput!
  ): [OldReprintBatchRangeWithIndexOutput!]
}

type Mutation {
  otopup_approve(
    objects: OtopupApproveInput
  ): OtopupApproveResponse
}

type Mutation {
  otopup_takeback(
    objects: OtopupTakebackInput
  ): OtopupTakebackResponse
}

type Mutation {
  pretups_topup_approve(
    objects: PreTUPStopupApproveInput
  ): PreTUPStopupApproveResponse
}

type Mutation {
  price_correction(
    objects: PriceCorrectionInput
  ): PriceCorrectionResponse
}

type Mutation {
  remove_deposit_approval(
    objects: RemoveApprovalInput
  ): RemoveApprovalResponse
}

type Mutation {
  remove_order_approval(
    objects: RemoveOrderApprovalInput
  ): RemoveOrderApprovalResponse
}

type Mutation {
  reprint_batch_range_voucher_with_index(
    objects: ReprintBatchRangeWithIndexInput!
  ): [ReprintBatchRangeWithIndexOutput!]
}

type Mutation {
  reset_password(
    objects: ResetPasswordInput
  ): ResetPasswordResponse
}

type Mutation {
  retry_direct_fill(
    objects: RetryDirectFillInput!
  ): RetryDirectFillOutput!
}

type Mutation {
  return_balance(
    objects: ReturnInput
  ): ReturnResponse
}

type Query {
  search_voucher(
    serial: String!
  ): [SearchVoucherReturn]
}

type Mutation {
  stock_change_user(
    objects: StockChangeUserInput!
  ): StockChangeUserOutput
}

type Mutation {
  stock_change_voucher(
    objects: StockChangeVoucherInput!
  ): StockChangeVoucherOutput
}

type Mutation {
  stock_change_voucher_by_order(
    objects: StockChangeVoucherByOrderInput!
  ): StockChangeVoucherByOrderOutput
}

type Mutation {
  stock_change_voucher_by_quantity(
    objects: StockChangeVoucherByQuantityInput!
  ): StockChangeVoucherByQuantityOutput
}

type Mutation {
  stock_change_voucher_to_main(
    objects: StockChangeVoucherToMainInput!
  ): StockChangeVoucherToMainOutput
}

type Mutation {
  suspend_batch(
    objects: SuspendInput!
  ): SuspendOutput
}

type Mutation {
  telebirr_topup_approve(
    objects: TelebirrtopupApproveInput
  ): TelebirrtopupApproveResponse
}

type Mutation {
  topup_approve(
    objects: TopupApproveInput
  ): TopupApproveResponse
}

type Mutation {
  transfer_balance(
    objects: TransferInput
  ): TransferResponse
}

type Mutation {
  transfer_distributor_balance(
    objects: TransferDistributorInput
  ): TransferDistributorResponse
}

type Mutation {
  transfer_outlet_balance(
    objects: TransferOutletInput
  ): TransferOutletResponse
}

type Mutation {
  update_credit_limit(
    objects: UpdateCreditLimitInput
  ): UpdateCreditLimitResponse
}

type Mutation {
  update_global_sellon(
    objects: UpdateGlobalSellonInput
  ): UpdateGlobalSellonResponse
}

type Mutation {
  update_outlet_credit_limit(
    objects: UpdateOutletCreditLimitInput
  ): UpdateOutletCreditLimitResponse
}

type Mutation {
  update_password(
    objects: PasswordInput
  ): UpdateResponse
}

type Mutation {
  update_profile(
    objects: UpdateProfileInput
  ): UpdateProfileResponse
}

type Query {
  user_sub_agents(
    objects: GetUserSubAgentsInput
  ): GetUserSubAgentsResponse
}

type Mutation {
  vc_topup_approve(
    objects: VCtopupApproveInput
  ): VCtopupApproveResponse
}

input SampleInput {
  name: String!
}

input CreateInput {
  username: String!
  password: String!
  full_name: String!
  email: String
  phone: String!
  roleid: uuid!
  distributorid: uuid
  outletid: uuid
  city: String
  zone: String
  region: String
  teleregionid: uuid!
  area: String!
  sellon: numeric
  ccdid: uuid
  sex: String!
  pos_availability: Boolean
  telebirr_agent: Boolean
  printer_serial: String
  birth_date: timestamptz
}

input PasswordInput {
  new_password: String!
  old_password: String!
}

input RequestApproveInput {
  amount: numeric!
  depositorid: uuid!
  requestid: uuid!
}

input OrderApproveInput {
  price: numeric!
  receiverid: uuid!
  orderid: uuid!
}

input LoanApproveInput {
  amount: numeric!
  receiverid: uuid!
  loanid: uuid!
}

input RepayInput {
  amount: numeric!
}

input DorderApproveInput {
  price: numeric!
  distributorid: uuid!
  dorderid: uuid!
}

input PaymentApproveInput {
  paymentid: uuid!
}

input ImportInput {
  denominationid: uuid!
  base64str: String!
}

input GetInput {
  denominationid: uuid!
  quantity: numeric!
}

input PriceInput {
  userid: uuid!
}

input DetailInput {
  denominationid: uuid!
  amount: numeric!
}

input DepositApproveInput {
  amount: numeric!
  depositorid: uuid!
  depositid: uuid!
}

input TopupApproveInput {
  topupid: uuid!
}

input DtopupApproveInput {
  dtopupid: uuid!
}

input TransferInput {
  receiverid: uuid!
  amount: numeric!
  note: String
  sell_on: numeric
}

input SalesInput {
  denominationid: uuid
  dateCount: Int!
}

input SuspendInput {
  denominationid: uuid!
  batch: String!
  suspend: Boolean!
}

input SyncInput {
  serial: String!
  printed_at: date!
}

input ResetPasswordInput {
  userid: uuid!
  new_password: String!
}

input ActivateDeactivateInput {
  userid: uuid!
  activate: Boolean!
}

input UpdateProfileInput {
  id: uuid!
  full_name: String!
  email: String!
  phone: String!
}

input CreateSimpleInput {
  username: String!
  password: String!
  full_name: String!
  phone: String!
  regionid: uuid!
  area: String!
}

input ReprintRangeInput {
  from: String!
  to: String!
}

input TransferDistributorInput {
  receiverid: uuid!
  amount: numeric!
  note: String
  sell_on: numeric
}

input TakebackInput {
  receiverid: uuid!
  note: String
}

input TakebackDistributorInput {
  receiverid: uuid!
  note: String
}

input GetVoucherInput {
  denominationid: uuid!
  quantity: numeric!
  buyer: String
}

input ReprintRangeWithIndexInput {
  from_index: Int!
  to_index: Int!
  from: String!
  to: String!
}

input DirectFillInput {
  denominationid: uuid!
  buyer: String!
}

input ReprintBatchRangeWithIndexInput {
  from_index: Int!
  to_index: Int!
  batch: String!
  from: String!
  to: String!
}

input RetryDirectFillInput {
  serial: String!
}

input DtopupTakebackInput {
  dtopupid: uuid!
}

input DtopupPaymentApproveInput {
  paymentid: uuid!
}

input CreateDistAndUserInput {
  username: String!
  password: String!
  full_name: String!
  phone: String!
  roleid: uuid!
  name: String!
  sellon: numeric
  city: String
  zone: String
  region: String
  teleregionid: uuid!
  area: String!
  sex: String!
}

input ChangeDenominationInput {
  denominationid: uuid!
  batchid: uuid!
}

input GetUserSubAgentsInput {
  userid: uuid!
}

input AgentToDistributorInput {
  agentid: uuid!
}

input CreateCCDAndUserInput {
  username: String!
  password: String!
  full_name: String!
  phone: String!
  roleid: uuid!
  name: String!
  sellon: numeric
  city: String
  zone: String
  region: String
  teleregionid: uuid!
  area: String!
  sex: String!
}

input LoadApproveInput {
  loadid: uuid!
}

input LoadTakebackInput {
  loadid: uuid!
}

input UpdateGlobalSellonInput {
  new_sellon: numeric!
}

input ReturnInput {
  receiverid: uuid!
  amount: numeric!
  note: String
}

input RemoveApprovalInput {
  depositid: uuid!
}

input TelebirrtopupApproveInput {
  telebirr_topupid: uuid!
}

input LoginInput {
  username: String!
  password: String!
}

input ImportVouchersInput {
  file: String!
  file_name: String!
}

input ApproveDepositInput {
  depositid: uuid!
}

input ClearDepositInput {
  depositid: uuid!
}

input StockChangeUserInput {
  distributorid: uuid
  userid: uuid
  stockid: uuid
}

input StockChangeVoucherInput {
  start_serial: String!
  end_serial: String!
  batch: String!
  denominationid: String!
  stockid: uuid!
}

input OldReprintBatchRangeWithIndexInput {
  from_index: Int!
  to_index: Int!
  batch: String!
  from: String!
  to: String!
}

input OldGetVoucherInput {
  denominationid: uuid!
  quantity: numeric!
  buyer: String
}

input UpdateCreditLimitInput {
  id: uuid!
  credit_limit: numeric!
}

input VCtopupApproveInput {
  vc_topupid: uuid!
}

input StockChangeVoucherByQuantityInput {
  quantity: numeric!
  denominationid: String!
  stockid: uuid!
}

input PreTUPStopupApproveInput {
  pretups_topupid: uuid!
}

input PriceCorrectionInput {
  userid: uuid!
  sellon: numeric!
  transfers: [uuid!]!
}

input ApproveOrderInput {
  orderid: uuid!
}

input ClearOrderInput {
  orderid: uuid!
}

input RemoveOrderApprovalInput {
  orderid: uuid!
}

input StockChangeVoucherByOrderInput {
  quantity: numeric!
  denominationid: String!
  stockid: uuid!
  order_itemid: uuid!
}

input StockChangeVoucherToMainInput {
  denominationid: String!
  stockid: uuid!
}

input AddItemLoadInput {
  itemid: uuid!
  amount: Int!
  reason: String!
}

input ItemTransferToDistributorInput {
  itemid: uuid!
  distributorid: uuid!
  amount: Int!
  price: numeric!
}

input ItemTransferToUserInput {
  itemid: uuid!
  userid: uuid!
  amount: Int!
  price: numeric!
}

input DeclareSoldInput {
  itemid: uuid!
  userid: uuid!
  amount: Int!
  price: numeric!
}

input CreateOutletAndUserInput {
  username: String!
  password: String!
  full_name: String!
  phone: String!
  roleid: uuid!
  name: String!
  sellon: numeric
  city: String
  zone: String
  region: String
  teleregionid: uuid!
  area: String!
  sex: String!
}

input OtopupApproveInput {
  otopupid: uuid!
}

input OtopupTakebackInput {
  otopupid: uuid!
}

input TransferOutletInput {
  receiverid: uuid!
  amount: numeric!
  note: String
  sell_on: numeric
}

input UpdateOutletCreditLimitInput {
  id: uuid!
  credit_limit: numeric!
}

input ItemTransferToOutletInput {
  itemid: uuid!
  outletid: uuid!
  amount: Int!
  price: numeric!
}

input DeclareSoldOutletInput {
  itemid: uuid!
  outletid: uuid!
  amount: Int!
  price: numeric!
}

type SampleOutput {
  accessToken: String!
}

type ActionResponse {
  accessToken: String!
}

type CreateResponse {
  status: Boolean!
}

type UpdateResponse {
  status: Boolean!
}

type RequestApproveResponse {
  status: Boolean!
}

type OrderApproveResponse {
  status: Boolean!
}

type LoanApproveResponse {
  status: Boolean!
}

type RepayResponse {
  status: Boolean!
}

type DorderApproveResponse {
  status: Boolean!
}

type PaymentApproveResponse {
  status: Boolean!
}

type ImportResponse {
  status: Boolean!
}

type GetOutput {
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
  batch: String!
  printed_at: date!
}

type PriceOutput {
  denominationid: uuid!
  denomination: String!
  price: String!
  priceid: uuid
}

type DetailResponse {
  status: Boolean!
}

type DepositApproveResponse {
  status: Boolean!
}

type TopupApproveResponse {
  status: Boolean!
}

type DtopupApproveResponse {
  status: Boolean!
}

type TransferResponse {
  status: Boolean!
}

type SalesReturn {
  lables: [String]
  dataSet: [String]
  denominationid: uuid
}

type SuspendOutput {
  count: Int
}

type DownloadedOutput {
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
  denominationid: uuid!
  name: String!
  value: String!
}

type SyncOutput {
  serial: String!
}

type ResetPasswordResponse {
  status: Boolean!
}

type ActivateDeactivateResponse {
  status: Boolean!
}

type ReprintOutput {
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
}

type UpdateProfileResponse {
  status: Boolean!
}

type CreateSimpleResponse {
  status: Boolean!
}

type ReprintRangeOutput {
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
}

type TransferDistributorResponse {
  status: Boolean!
}

type TakebackResponse {
  status: Boolean!
}

type TakebackDistributorResponse {
  status: Boolean!
}

type GetVoucherOutput {
  index: Int!
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
  batch: String!
  printed_at: date!
  denomination: String!
}

type ReprintRangeWithIndexOutput {
  index: Int!
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
}

type DirectFillOutput {
  index: Int!
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
  batch: String!
  printed_at: date!
  buyer: String!
}

type ReprintBatchRangeWithIndexOutput {
  index: Int!
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
}

type RetryDirectFillOutput {
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
  buyer: String
}

type DtopupTakebackResponse {
  status: Boolean!
}

type DtopupPaymentApproveResponse {
  status: Boolean!
}

type CreateDistAndUserResponse {
  status: Boolean!
}

type SearchVoucherReturn {
  id: uuid!
  serial: String!
  sale_batch: String!
  printed_at: timestamptz!
  archived: Boolean!
  denominationid: uuid!
}

type ChangeDenominationOutput {
  count: Int
}

type GetUserSubAgentsResponse {
  agent: Int!
  subagent: Int!
  agentList: [uuid]!
}

type AgentToDistributorResponse {
  status: Boolean!
}

type AgentToDistributorOutput {
  status: Boolean!
}

type CreateCCDAndUserResponse {
  status: Boolean!
}

type LoadApproveResponse {
  status: Boolean!
}

type LoadTakebackResponse {
  status: Boolean!
}

type UpdateGlobalSellonResponse {
  status: Boolean!
}

type ReturnResponse {
  status: Boolean!
}

type RemoveApprovalResponse {
  status: Boolean!
}

type TelebirrtopupApproveResponse {
  status: Boolean!
}

type LoginResponse {
  metadata: String!
  token: String!
}

type ImportVouchersOutput {
  status: Boolean!
}

type ApproveDepositResponse {
  status: Boolean!
}

type ClearDepositResponse {
  status: Boolean!
}

type StockChangeUserOutput {
  count: Int
}

type StockChangeVoucherOutput {
  count: Int
}

type OldReprintBatchRangeWithIndexOutput {
  index: Int!
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
}

type OldGetVoucherOutput {
  index: Int!
  id: uuid!
  serial: String!
  voucher: String!
  expiration_date: date!
  batch: String!
  printed_at: date!
  denomination: String!
}

type UpdateCreditLimitResponse {
  status: Boolean!
}

type VCtopupApproveResponse {
  status: Boolean!
}

type StockChangeVoucherByQuantityOutput {
  count: Int
}

type PreTUPStopupApproveResponse {
  status: Boolean!
}

type PriceCorrectionResponse {
  status: Boolean!
}

type ApproveOrderResponse {
  status: Boolean!
}

type ClearOrderResponse {
  status: Boolean!
}

type RemoveOrderApprovalResponse {
  status: Boolean!
}

type StockChangeVoucherByOrderOutput {
  count: Int
}

type StockChangeVoucherToMainOutput {
  count: Int
}

type AddItemLoadResponse {
  status: Boolean!
}

type ItemTransferToDistributorResponse {
  status: Boolean!
}

type ItemTransferToUserResponse {
  status: Boolean!
}

type DeclareSoldResponse {
  status: Boolean!
}

type CreateOutletAndUserResponse {
  status: Boolean!
}

type OtopupApproveResponse {
  status: Boolean!
}

type OtopupTakebackResponse {
  status: Boolean!
}

type TransferOutletResponse {
  status: Boolean!
}

type UpdateOutletCreditLimitResponse {
  status: Boolean!
}

type ItemTransferToOutletResponse {
  status: Boolean!
}

type DeclareSoldOutletResponse {
  status: Boolean!
}

