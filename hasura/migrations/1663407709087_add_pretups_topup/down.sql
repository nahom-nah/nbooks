-- Could not auto-generate a down migration.
-- Please write an appropriate down migration for the SQL below:
-- CREATE OR REPLACE VIEW "public"."so_credit_view" AS
--  SELECT sub.id,
--     sub.name,
--     sub.phone,
--     sub.balance,
--     sub.last_transfer,
--     ((date_part('day'::text, ((now())::timestamp without time zone - (sub.last_transfer)::timestamp without time zone)) * (24)::double precision) + date_part('hour'::text, ((now())::timestamp without time zone - (sub.last_transfer)::timestamp without time zone))) AS diff_in_hour,
--     COALESCE(sub.transfers, (0)::numeric) AS transfers,
--     COALESCE(sub.deposits, (0)::numeric) AS deposits,
--     (((COALESCE(sub.deposits, (0)::numeric) - COALESCE(sub.vc_topups, (0)::numeric) - COALESCE(sub.pretups_topups, (0)::numeric)) - COALESCE(sub.telebirr_topups, (0)::numeric)) - COALESCE(sub.transfers, (0)::numeric)) AS difference,
--     COALESCE(sub.telebirr_topups, (0)::numeric) AS telebirr_topups,
--     sub.allow_agent_chain,
--     COALESCE(sub.vc_topups, (0)::numeric) AS vc_topups,
--     COALESCE(sub.pretups_topups, (0)::numeric) AS pretups_topups
--    FROM ( SELECT d.id,
--             d.name,
--             d.phone,
--             d.balance,
--             ( SELECT sum(tr.birr_value) AS transfers
--                    FROM ((transfer tr
--                      JOIN "user" u ON ((tr.receiverid = u.id)))
--                      JOIN role r ON ((u.roleid = r.id)))
--                   WHERE ((tr.distributorid = d.id) AND tr.is_root AND (r.name = 'Agent'::text))) AS transfers,
--             ( SELECT sum(dp.amount) AS deposits
--                    FROM deposit dp
--                   WHERE ((dp.distributorid = d.id) AND (dp.approverid IS NOT NULL) AND dp.is_root)) AS deposits,
--             ( SELECT max(top.created_at) AS last_transfer
--                    FROM dtopup top
--                   WHERE ((top.distributorid = d.id) AND (top.approverid IS NOT NULL))) AS last_transfer,
--             ( SELECT sum(ttop.amount) AS telebirr_topups
--                    FROM telebirr_topup ttop
--                   WHERE ((ttop.distributorid = d.id) AND (ttop.approverid IS NOT NULL))) AS telebirr_topups,
--             d.allow_agent_chain,
--             ( SELECT sum(vtop.amount) AS vc_topups
--                    FROM vc_topup vtop
--                   WHERE ((vtop.distributorid = d.id) AND (vtop.approverid IS NOT NULL))) AS vc_topups,
--             ( SELECT sum(ptop.amount) AS pretups_topups
--                    FROM pretups_topup ptop
--                   WHERE ((ptop.distributorid = d.id) AND (ptop.approverid IS NOT NULL))) AS pretups_topups
--            FROM distributor d) sub;
